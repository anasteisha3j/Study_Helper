@{
    Layout = "_AdminLayout";
}
@model StudyApp.Models.AdminModel

<style>
    .admin-dashboard {
        padding: 20px;
        max-width: 1200px;
        margin: 0 auto;
        font-family: 'Inter', sans-serif;
    }
    .stats {
        display: flex;
        gap: 20px;
        margin-bottom: 30px;
    }
    .stat-card {
        background: #fff;
        border-radius: 8px;
        padding: 20px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        flex: 1;
    }
    .stat-card h3 {
        margin-top: 0;
        color: #555;
    }
    .stat-card p {
        font-size: 24px;
        font-weight: bold;
        color: #4e73df;
        margin: 10px 0 0;
    }
    table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 20px;
    }
    thead {
        border-bottom: 2px solid #e0e0e0;
    }
    th {
        padding: 15px;
        text-align: left;
        font-weight: 600;
        color: #555;
    }
    td {
        padding: 15px;
        vertical-align: middle;
    }
    tbody tr {
        border-bottom: 1px solid #f0f0f0;
    }
    tbody tr:last-child {
        border-bottom: none;
    }
    .action-buttons {
        display: flex;
        gap: 10px;
        justify-content: flex-end;
    }
    .btn {
        padding: 8px 16px;
        border-radius: 6px;
        color: white;
        font-size: 14px;
        cursor: pointer;
        border: none;
        transition: all 0.2s;
        white-space: nowrap;
    }
    .btn-danger {
        background-color: #dc3545;
    }
    .btn-danger:hover {
        background-color: #bb2d3b;
        transform: translateY(-1px);
    }
    .btn-primary {
        background-color: #007bff;
    }
    .btn-primary:hover {
        background-color: #0069d9;
        transform: translateY(-1px);
    }
    .btn-success {
        background-color: #28a745;
    }
    .btn-success:hover {
        background-color: #218838;
        transform: translateY(-1px);
    }
    .last-activity {
        font-size: 13px;
        color: #666;
        margin-top: 4px;
    }
    h1, h2 {
        color: #333;
    }
    .user-info {
        display: flex;
        flex-direction: column;
    }
    .admin-actions {
        display: flex;
        justify-content: flex-end;
        margin-bottom: 20px;
    }
</style>

<div class="admin-dashboard">
    <h1>–ü–∞–Ω–µ–ª—å –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞</h1>
    
    <div class="admin-actions">
        <a href="@Url.Action("UserDownloads", "Admin")" class="btn btn-success">
            –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—å
        </a>
    </div>
    
    <div class="stats">
        <div class="stat-card">
            <h3>–ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤</h3>
            <p>@Model.TotalUsers</p>
        </div>
        
        <div class="stat-card">
            <h3>–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—ñ–≤</h3>
            <p>@Model.TotalAdmins</p>
        </div>
    </div>

    <!-- üîç –ü–æ—à—É–∫ —Ç–∞ —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è -->
    <div class="mb-4 d-flex gap-3 align-items-end">
        <div>
            <label for="userSearch">–ü–æ—à—É–∫</label>
            <input type="text" id="userSearch" class="form-control" placeholder="–ü–æ—à—É–∫ –ø–æ —ñ–º–µ–Ω—ñ, email, —Ä–æ–ª—ñ..." />
        </div>
        <div>
            <label for="activityFilter">–ê–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å</label>
            <select id="activityFilter" class="form-select">
                <option value="all">–£—Å—ñ</option>
                <option value="1">–ó–∞ 1 –¥–µ–Ω—å</option>
                <option value="7">–ó–∞ 7 –¥–Ω—ñ–≤</option>
                <option value="30">–ó–∞ 30 –¥–Ω—ñ–≤</option>
            </select>
        </div>
    </div>

    <h2>–£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º–∏</h2>
    <table>
        <thead>
            <tr>
                <th>–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á</th>
                <th>–†–æ–ª—å</th>
                <th>–ê–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in Model.Users)
            {
                <tr>
                    <td>
                        <div class="user-info">
                            <strong>@user.FullName</strong>
                            <span>@user.Email</span>
                        </div>
                    </td>
                    <td>@user.Role</td>
                    <td>
                        @user.LastActivity.ToString("g")
                        <div class="last-activity">
                            @{
                                var timePassed = DateTime.Now - user.LastActivity;
                                var timeString = "";
                                if (timePassed.Days > 0) timeString += $"{timePassed.Days} –¥–Ω. ";
                                if (timePassed.Hours > 0) timeString += $"{timePassed.Hours} –≥–æ–¥. ";
                                timeString += $"{timePassed.Minutes} —Ö–≤. —Ç–æ–º—É";
                            }
                            (@timeString)
                        </div>
                    </td>
                    <td>
                        <div class="action-buttons">
                            @if (user.Role != "Admin")
                            {
                                <form asp-action="MakeAdmin" asp-route-id="@user.Id" method="post">
                                    <button type="submit" class="btn btn-primary">–ó—Ä–æ–±–∏—Ç–∏ –∞–¥–º—ñ–Ω–æ–º</button>
                                </form>
                            }
                            <form asp-action="DeleteUser" asp-route-id="@user.Id" method="post" 
                                  onsubmit="return confirm('–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ —Ü—å–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞?');">
                                <button type="submit" class="btn btn-danger">–í–∏–¥–∞–ª–∏—Ç–∏</button>
                            </form>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const searchInput = document.getElementById("userSearch");
            const activitySelect = document.getElementById("activityFilter");
            const rows = document.querySelectorAll("tbody tr");

            function filterTable() {
                const search = searchInput.value.toLowerCase();
                const daysFilter = activitySelect.value;
                const now = new Date();

                rows.forEach(row => {
                    const name = row.querySelector("td:nth-child(1) strong").textContent.toLowerCase();
                    const email = row.querySelector("td:nth-child(1) span").textContent.toLowerCase();
                    const role = row.querySelector("td:nth-child(2)").textContent.toLowerCase();
                    const activityText = row.querySelector("td:nth-child(3)").textContent;

                    const matchesSearch =
                        name.includes(search) ||
                        email.includes(search) ||
                        role.includes(search);

                    let matchesActivity = true;

                    if (daysFilter !== "all") {
                        const dateMatch = activityText.match(/(\d{1,2})\.(\d{1,2})\.(\d{4}) (\d{1,2}):(\d{2})/);
                        if (dateMatch) {
                            const day = parseInt(dateMatch[1]);
                            const month = parseInt(dateMatch[2]) - 1; 
                            const year = parseInt(dateMatch[3]);
                            const hours = parseInt(dateMatch[4]);
                            const minutes = parseInt(dateMatch[5]);

                            const lastActive = new Date(year, month, day, hours, minutes);
                            const diffDays = (now - lastActive) / (1000 * 60 * 60 * 24);
                            matchesActivity = diffDays <= parseInt(daysFilter);
                        } else {
                            matchesActivity = false;
                        }
                    }

                    row.style.display = (matchesSearch && matchesActivity) ? "" : "none";
                });
            }

            searchInput.addEventListener("input", filterTable);
            activitySelect.addEventListener("change", filterTable);
        });
    </script>

</div>
