@model IEnumerable<StudyApp.Models.Study>
@using Microsoft.AspNetCore.Identity
@inject UserManager<User> UserManager
@using StudyApp.Models 

@{
    ViewData["Title"] = "Мої конспекти";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>@ViewData["Title"]</h1>
        <a asp-action="Create" class="btn btn-primary">
            <i class="fas fa-plus"></i> Новий конспект
        </a>
    </div>

    @if (!Model.Any())
    {
        <div class="alert alert-info">
            У вас ще немає конспектів. Створіть перший!
        </div>
    }
    else
    {
        <div class="row">
            @foreach (var study in Model)
            {
                <div class="col-md-6 col-lg-4 mb-4">
                    <div class="card h-100">
                        <div class="card-header bg-primary text-white">
                            <h5 class="card-title mb-0">@study.Title</h5>
                        </div>
                        <div class="card-body">
                            <div class="mb-2">
                                <span class="badge bg-secondary">@study.Category</span>
                                @if (!string.IsNullOrEmpty(study.Tags))
                                {
                                    <span class="badge bg-info ms-1">@study.Tags</span>
                                }
                            </div>

                            @if (study.Files != null && study.Files.Any())
                            {
                                <div class="mb-3">
                                    <h6>Файли:</h6>
                                    <ul class="list-group list-group-flush">
                                        @foreach (var file in study.Files)
                                        {
                                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                                <a href="@file.StoragePath" download="@file.OriginalName">
                                                    <i class="fas @GetFileIcon(file.FileType) me-2"></i>
                                                    @file.OriginalName
                                                </a>
                                                <span class="badge bg-light text-dark">@FormatFileSize(file.FileSize)</span>
                                            </li>
                                        }
                                    </ul>
                                </div>
                            }
                            else
                            {
                                <div class="alert alert-warning mb-3">Немає прикріплених файлів</div>
                            }
                        </div>
                        <div class="card-footer bg-transparent">
                            <div class="d-flex justify-content-between">
                                <small class="text-muted">
                                    Створено: @study.CreatedAt.ToString("dd.MM.yyyy HH:mm")
                                </small>
                                <div>
                                    <a asp-action="Edit" asp-route-id="@study.Id" class="btn btn-sm btn-outline-secondary">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    <a asp-action="Delete" asp-route-id="@study.Id" class="btn btn-sm btn-outline-danger ms-1">
                                        <i class="fas fa-trash"></i>
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@functions {
    string GetFileIcon(string fileType)
    {
        return fileType?.ToLower() switch
        {
            ".pdf" => "fa-file-pdf text-danger",
            ".docx" or ".doc" => "fa-file-word text-primary",
            ".xlsx" or ".xls" => "fa-file-excel text-success",
            ".jpg" or ".jpeg" or ".png" => "fa-file-image text-info",
            ".zip" or ".rar" => "fa-file-archive text-warning",
            _ => "fa-file text-secondary"
        };
    }

    string FormatFileSize(long bytes)
    {
        string[] sizes = { "B", "KB", "MB", "GB" };
        int order = 0;
        while (bytes >= 1024 && order < sizes.Length - 1)
        {
            order++;
            bytes /= 1024;
        }
        return $"{bytes:0.##} {sizes[order]}";
    }
}